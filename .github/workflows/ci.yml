name: Mobile CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:

env:
  EXPO_NO_TELEMETRY: "1"

jobs:
  lint_and_test:
    name: Lint and Jest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Ensure no binary files are tracked
        run: npm run check:binaries
      - name: Run ESLint
        run: npm run lint
      - name: Run unit tests
        run: npm test -- --ci --runInBand
      - name: Type-check
        run: npm run typecheck

  android_build:
    name: Android release build
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Install dependencies
        run: npm ci
      - name: Expo prebuild (Android)
        run: npx expo prebuild --platform android --non-interactive --no-install
      - name: Ensure Gradle wrapper exists
        id: ensure_gradlew
        run: |
          if [ -f android/gradlew ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
            echo "::warning::Gradle wrapper was not generated; skipping Android build steps."
          fi
      - name: Grant execute permissions for Gradlew
        if: steps.ensure_gradlew.outputs.present == 'true'
        run: chmod +x android/gradlew
      - name: Assemble release APK
        if: steps.ensure_gradlew.outputs.present == 'true'
        run: cd android && ./gradlew :app:assembleRelease

  ios_build:
    name: iOS simulator build
    runs-on: macos-latest
    needs: lint_and_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Install Watchman
        run: brew install watchman
      - name: Expo prebuild (iOS)
        run: npx expo prebuild --platform ios --non-interactive --no-install
      - name: Ensure CocoaPods project exists
        id: ensure_pods
        run: |
          if [ -f ios/Podfile ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
            echo "::warning::iOS native project was not generated; skipping CocoaPods install and build."
          fi
      - name: Install CocoaPods dependencies
        if: steps.ensure_pods.outputs.present == 'true'
        run: cd ios && pod install
      - name: Build for simulator
        if: steps.ensure_pods.outputs.present == 'true'
        run: |
          set -euo pipefail
          cd ios
          xcodebuild \
            -workspace Netsight.xcworkspace \
            -scheme Netsight \
            -configuration Release \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,OS=latest,name=iPhone 16' \
            build
